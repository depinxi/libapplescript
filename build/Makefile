# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),release)
  applescript_config = release
  as_exec_config = release
  as_tell_config = release
  as_info_config = release

else ifeq ($(config),debug)
  applescript_config = debug
  as_exec_config = debug
  as_tell_config = debug
  as_info_config = debug

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := applescript as-exec as-tell as-info

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

applescript:
ifneq (,$(applescript_config))
	@echo "==== Building applescript ($(applescript_config)) ===="
	@${MAKE} --no-print-directory -C . -f applescript.make config=$(applescript_config)
endif

as-exec: applescript
ifneq (,$(as_exec_config))
	@echo "==== Building as-exec ($(as_exec_config)) ===="
	@${MAKE} --no-print-directory -C . -f as-exec.make config=$(as_exec_config)
endif

as-tell: applescript
ifneq (,$(as_tell_config))
	@echo "==== Building as-tell ($(as_tell_config)) ===="
	@${MAKE} --no-print-directory -C . -f as-tell.make config=$(as_tell_config)
endif

as-info: applescript
ifneq (,$(as_info_config))
	@echo "==== Building as-info ($(as_info_config)) ===="
	@${MAKE} --no-print-directory -C . -f as-info.make config=$(as_info_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f applescript.make clean
	@${MAKE} --no-print-directory -C . -f as-exec.make clean
	@${MAKE} --no-print-directory -C . -f as-tell.make clean
	@${MAKE} --no-print-directory -C . -f as-info.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  release"
	@echo "  debug"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   applescript"
	@echo "   as-exec"
	@echo "   as-tell"
	@echo "   as-info"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"