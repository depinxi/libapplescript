/**************************************************************************************$
 * libapplescript - A tiny C library to execute AppleScript
 ***************************************************************************************
 * Copyright Â© 2014 - 2019 by Renaud Guillard (dev@nore.fr)
 * Distributed under the terms of the MIT License, see LICENSE
 ***************************************************************************************
 */

/**
 * @file applescript.h
 * @brief libapplescript library API
 *
 * @see https://developer.apple.com/documentation/foundation/nsapplescript?language=objc
 */

#if !defined(APPLESCRIPT_APPLESCRIPT_H__)
#define APPLESCRIPT_APPLESCRIPT_H__

#include <stdio.h>

#if !defined (APPLESCRIPTAPI)
#	if defined(__cplusplus)
#		define APPLESCRIPTAPI extern "C"
#	else
#		define APPLESCRIPTAPI extern
#	endif
#endif

#define APPLESCRIPT_VERSION_MAJOR 2
#define APPLESCRIPT_VERSION_MINOR 0
#define APPLESCRIPT_VERSION_PATCH 0
#define APPLESCRIPT_VERSION ( \
			(APPLESCRIPT_VERSION_MAJOR * 10000) \
			+ (APPLESCRIPT_VERSION_MINOR * 100) \
			+ (APPLESCRIPT_VERSION_PATCH))


#define APPLESCRIPT_QUOTEME_(x) #x
#define APPLESCRIPT_QUOTEME(x) APPLESCRIPT_QUOTEME_(x)

#define APPLESCRIPT_VERSIONSTRING \
		APPLESCRIPT_QUOTEME(APPLESCRIPT_VERSION_MAJOR) \
		"." \
		APPLESCRIPT_QUOTEME(APPLESCRIPT_VERSION_MINOR) \
		"." \
		APPLESCRIPT_QUOTEME(APPLESCRIPT_VERSION_PATCH)

/**
 * Callback invoked by @c applescript_execute_cstring()
 * and @c applescript_tell_application_cstring()
 * for each apple event generated by the execution of the AppleScript code.
 *
 * @param event_index Event index [0-n] or -1 on error
 * @param event_count Total number of AppleEvent generated.
 * @param event_type AppleEvent type. On success, a FourCC describing the AppleEvent descriptor.
 * 	#see https://developer.apple.com/documentation/coreservices/1542788-descriptor_type_constants?language=objc
 * 	On error, the error code
 * @param event_value On success, the string representation of the AppleEvent value.
 * On error, the error message if any
 * @param cookie User data
 */
typedef void (*applescript_event_handler)(int event_index, size_t event_count, int event_type, const char *event_value, void *cookie);

/**
 * Execute arbitrary AppleScript code
 *
 * @param applescriptCode AppleScript code to execute
 * @param event_handler A callback to invoke for each AppleEvent generated
 * by the execution of the AppleScript code
 * @param cookie User data given to @c event_handler
 *
 * On execution error, @c event_hanlder is invoked once with
 * - @c event_index -1
 * - @c event_count 0
 * - @c event_type The error code
 * - @c event_value
 *
 * @return @c 0 on success. Obherwise the value of the @c NSAppleScriptErrorNumber key
 * of the @c NSDictionnary error information.
 */
APPLESCRIPTAPI int applescript_execute_cstring(const char *applescriptCode, applescript_event_handler event_handler, void *cookie);

/**
 * Tell an application to execute on or more commands
 *
 * This is a shorthand for
 * @code{.c}
 * int res = int applescript_execute_cstring("tell application \"applicationName\"\n applescriptCode\n endtell");
 * @endcode
 *
 * @param applicationName Application name
 * @param applescriptCode AppleScript source code
 * @param event_handler A callback to invoke for each AppleEvent generated
 * by the execution of the AppleScript code
 * @param cookie User data given to @c event_handler
 *
 * @return @c 0 on success. Obherwise the value of the @c NSAppleScriptErrorNumber key
 * of the @c NSDictionnary error information.
 */
APPLESCRIPTAPI int applescript_tell_application_cstring(const char *applicationName, const char *applescriptCode, applescript_event_handler event_handler, void *cookie);

#endif /* APPLESCRIPT_APPLESCRIPT_H__ */
